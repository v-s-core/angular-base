{"ast":null,"code":"// Angular modules\nimport { isPlatformServer } from '@angular/common';\nimport { signal } from '@angular/core';\nimport { PLATFORM_ID } from '@angular/core';\n// Internal modules\nimport { environment } from '@env/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nexport class StoreService {\n  constructor(platformId, translateService) {\n    this.platformId = platformId;\n    this.translateService = translateService;\n    this.isServer = signal(isPlatformServer(this.platformId));\n    this.isLoading = signal(true);\n    this.pageTitle = signal(environment.appName);\n  }\n  // -------------------------------------------------------------------------------\n  // NOTE Page title ---------------------------------------------------------------\n  // -------------------------------------------------------------------------------\n  setPageTitle(title, translate = true) {\n    const pageTitle = translate ? this.translateService.instant(title) : title;\n    this.pageTitle.set(pageTitle);\n  }\n  static #_ = this.ɵfac = function StoreService_Factory(t) {\n    return new (t || StoreService)(i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i1.TranslateService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StoreService,\n    factory: StoreService.ɵfac\n  });\n}","map":{"version":3,"names":["isPlatformServer","signal","PLATFORM_ID","environment","StoreService","constructor","platformId","translateService","isServer","isLoading","pageTitle","appName","setPageTitle","title","translate","instant","set","_","i0","ɵɵinject","i1","TranslateService","_2","factory","ɵfac"],"sources":["D:\\web app\\angular-base\\src\\app\\shared\\services\\store.service.ts"],"sourcesContent":["// Angular modules\r\nimport { isPlatformServer } from '@angular/common';\r\nimport { Inject }           from '@angular/core';\r\nimport { signal }           from '@angular/core';\r\nimport { Injectable }       from '@angular/core';\r\nimport { PLATFORM_ID }      from '@angular/core';\r\n\r\n// External modules\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n// Internal modules\r\nimport { environment }      from '@env/environment';\r\n\r\n@Injectable()\r\nexport class StoreService\r\n{\r\n  public isServer  = signal(isPlatformServer(this.platformId));\r\n  public isLoading = signal(true);\r\n  public pageTitle = signal(environment.appName);\r\n\r\n  constructor\r\n  (\r\n    @Inject(PLATFORM_ID) private platformId : Object,\r\n    private translateService : TranslateService\r\n  )\r\n  {\r\n  }\r\n\r\n  // -------------------------------------------------------------------------------\r\n  // NOTE Page title ---------------------------------------------------------------\r\n  // -------------------------------------------------------------------------------\r\n\r\n  public setPageTitle(title : string, translate : boolean = true) : void\r\n  {\r\n    const pageTitle = translate ? this.translateService.instant(title) : title;\r\n    this.pageTitle.set(pageTitle);\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,SAASA,gBAAgB,QAAQ,iBAAiB;AAElD,SAASC,MAAM,QAAkB,eAAe;AAEhD,SAASC,WAAW,QAAa,eAAe;AAKhD;AACA,SAASC,WAAW,QAAa,kBAAkB;;;AAGnD,OAAM,MAAOC,YAAY;EAMvBC,YAE+BC,UAAmB,EACxCC,gBAAmC;IADd,KAAAD,UAAU,GAAVA,UAAU;IAC/B,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAPnB,KAAAC,QAAQ,GAAIP,MAAM,CAACD,gBAAgB,CAAC,IAAI,CAACM,UAAU,CAAC,CAAC;IACrD,KAAAG,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;IACxB,KAAAS,SAAS,GAAGT,MAAM,CAACE,WAAW,CAACQ,OAAO,CAAC;EAQ9C;EAEA;EACA;EACA;EAEOC,YAAYA,CAACC,KAAc,EAAEC,SAAA,GAAsB,IAAI;IAE5D,MAAMJ,SAAS,GAAGI,SAAS,GAAG,IAAI,CAACP,gBAAgB,CAACQ,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK;IAC1E,IAAI,CAACH,SAAS,CAACM,GAAG,CAACN,SAAS,CAAC;EAC/B;EAAC,QAAAO,CAAA,G;qBAtBUb,YAAY,EAAAc,EAAA,CAAAC,QAAA,CAQbjB,WAAW,GAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;WARVlB,YAAY;IAAAmB,OAAA,EAAZnB,YAAY,CAAAoB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}